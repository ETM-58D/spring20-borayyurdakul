{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
#Question 1.b) In this part, we calculated hypersphere and hypercube in dimension=3 and dimension=In dimension 2, we used (nof_sphere/nof_samples)*4 and in dimension=3, we used nof_sphere/nof_samples*6 as we found from the calculations\
\
#area\
nof_samples=1000\
data_points=runif(nof_samples*2,-1,1)\
data_points=matrix(data_points,ncol=2)\
plot(data_points)\
euclidean_distance=sqrt((data_points[ ,1]-0)^2 + (data_points[ ,2]-0)^2)\
is_in_circle=euclidean_distance<=1\
nof_sphere=sum(is_in_circle)\
estimated_pi=(nof_sphere/nof_samples)*6\
print(estimated_pi)\
print(pi)\
points(data_points,col=as.numeric(is_in_circle)+1)\
\
#volume\
\
require("scatterplot3d")\
nof_samples=1000\
data_points=runif(nof_samples*3,-1,1)\
data_points=matrix(data_points,ncol=3)\
scatterplot3d(data_points)\
euclidean_distance=sqrt((data_points[ ,1]-0)^2 + (data_points[ ,2]-0)^2+(data_points[ ,3]-0)^2)\
is_in_sphere=euclidean_distance<=1\
nof_sphere=sum(is_in_sphere)\
estimated_pi=nof_sphere/nof_samples*6\
print(estimated_pi)\
print(pi)\
scatterplot3d(data_points,color=as.numeric(is_in_sphere)+1)}